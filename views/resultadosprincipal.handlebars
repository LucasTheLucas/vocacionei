<!-- Importa o Bootstrap -->
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>

<div class="p-3">
  <div class="container">
    <h2 id="pessoa" class="text-center my-4"></h2>
  </div>
  <div class="container">
    <canvas id="meuGrafico" height="120"></canvas>
  </div>
</div>

<!-- Resultados com barras de progresso -->
<div class="container my-5">
  <h3 class="text-center mb-4">Detalhes do seu teste</h3>
  <div id="barrasProgresso"></div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  // Dados da pessoa enviados pelo Handlebars
  const pessoa = {{{json pessoa}}}

  const tipos = [
    { nome: "REALISTA", valor: pessoa.resr, cor: "success" },
    { nome: "INVESTIGADOR", valor: pessoa.resi, cor: "primary" },
    { nome: "ARTÍSTICO", valor: pessoa.resa, cor: "warning" },
    { nome: "SOCIAL", valor: pessoa.ress, cor: "purple" }, // custom color
    { nome: "EMPREENDEDOR", valor: pessoa.rese, cor: "danger" },
    { nome: "CONVENCIONAL", valor: pessoa.resc, cor: "info" }
  ];

  // Descobre os maiores valores
  const maiorValor = Math.max(...tipos.map(t => t.valor));
  const maiores = tipos.filter(t => t.valor === maiorValor);

  // Descrição da pessoa
  let descricao = `Olá ${pessoa.nome}, você é uma pessoa: `;
  maiores.forEach((t, i) => {
    if (i === 0) descricao += t.nome;
    else if (i === maiores.length - 1) descricao += " e " + t.nome;
    else descricao += ", " + t.nome;
  });

  document.getElementById("pessoa").textContent = descricao;

  // Cria as barras de progresso dinamicamente
  const container = document.getElementById("barrasProgresso");
  tipos.forEach(t => {
    const porcentagem = ((t.valor / 75) * 100).toFixed(1);
    const div = document.createElement("div");
    div.className = "tipo mb-3";
    div.innerHTML = `
      <div class="tipo-name">${t.nome}: ${t.valor} (${porcentagem}%)</div>
      <div class="progress">
        <div class="progress-bar bg-${t.cor}" role="progressbar" style="width: ${porcentagem}%" aria-valuenow="${t.valor}" aria-valuemin="0" aria-valuemax="75"></div>
      </div>
    `;
    container.appendChild(div);
  });

  // Cria o gráfico
  const ctx = document.getElementById("meuGrafico").getContext("2d");
  new Chart(ctx, {
    type: "bar",
    data: {
      labels: tipos.map(t => t.nome),
      datasets: [{
        label: "Pontuação",
        data: tipos.map(t => t.valor),
        backgroundColor: [
          "rgba(76, 175, 80, 0.6)",
          "rgba(33, 150, 243, 0.6)",
          "rgba(255, 193, 7, 0.6)",
          "rgba(156, 39, 176, 0.6)",
          "rgba(244, 67, 54, 0.6)",
          "rgba(0, 188, 212, 0.6)"
        ],
        borderColor: "rgba(0,0,0,0.1)",
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      scales: { y: { beginAtZero: true, max: 75 } },
      plugins: { legend: { display: false } }
    }
  });
</script>